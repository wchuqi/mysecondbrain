{:highlights [{:id #uuid "63e38e73-9db6-4bce-9d62-0cc96bb73c46", :page 2, :position {:bounding {:x1 0, :y1 46, :x2 519.0386753082275, :y2 411.13543701171875, :width 590.6710283818651, :height 835.8779026907482}, :rects ({:x1 0, :y1 46, :x2 0, :y2 65.33333587646484, :width 590.6710283818651, :height 835.8779026907482} {:x1 424.5416660308838, :y1 382.9375, :x2 519.0386753082275, :y2 395.60418701171875, :width 590.6710283818651, :height 835.8779026907482} {:x1 83.08333778381348, :y1 398.46875, :x2 205.19387245178223, :y2 411.13543701171875, :width 590.6710283818651, :height 835.8779026907482}), :page 2}, :content {:text "基于Java的3个长期支持版（Java 8、11、17）"}, :properties {:color "yellow"}} {:id #uuid "63e38e9c-31d6-4fbf-b74b-2a794462baa7", :page 5, :position {:bounding {:x1 0, :y1 94, :x2 580.1354370117188, :y2 556.3333740234375, :width 632.845466273498, :height 837.1940656100257}, :rects ({:x1 0, :y1 94, :x2 0, :y2 113.33333587646484, :width 632.845466273498, :height 837.1940656100257} {:x1 0, :y1 110, :x2 0, :y2 129.33333587646484, :width 632.845466273498, :height 837.1940656100257} {:x1 267, :y1 492.82293701171875, :x2 580.1354370117188, :y2 515.4896240234375, :width 632.845466273498, :height 837.1940656100257} {:x1 292.125, :y1 496.15625, :x2 580.1354370117188, :y2 513.3645935058594, :width 632.845466273498, :height 837.1940656100257} {:x1 240.96875, :y1 518.2395935058594, :x2 574.1361083984375, :y2 534.9062805175781, :width 632.845466273498, :height 837.1940656100257} {:x1 240.96875, :y1 539.6666870117188, :x2 428.19793701171875, :y2 556.3333740234375, :width 632.845466273498, :height 837.1940656100257}), :page 5}, :content {:text "Java 8最大的改进是引入了函数式编程的一些长处，简单来说包括lambda表达式、流（stream ）,以及“函数式基本类型M （functional primitive ）等"}, :properties {:color "yellow"}} {:id #uuid "63e38eb0-eb48-4966-a15b-ab07718c3d6e", :page 5, :position {:bounding {:x1 0, :y1 142, :x2 574.0197143554688, :y2 600.8854370117188, :width 632.845466273498, :height 837.1940656100257}, :rects ({:x1 0, :y1 142, :x2 0, :y2 161.33334350585938, :width 632.845466273498, :height 837.1940656100257} {:x1 525.0833740234375, :y1 556.8229370117188, :x2 574.0197143554688, :y2 579.4896240234375, :width 632.845466273498, :height 837.1940656100257} {:x1 240.96875, :y1 578.21875, :x2 570.18505859375, :y2 600.8854370117188, :width 632.845466273498, :height 837.1940656100257} {:x1 240.96875, :y1 581.5521240234375, :x2 359.427734375, :y2 598.7396240234375, :width 632.845466273498, :height 837.1940656100257}), :page 5}, :content {:text "由于受制于向后兼容性.Java无法彻底翻新为一门函数式编程语言"}, :properties {:color "yellow"}} {:id #uuid "63e38ec8-eb50-4b19-89cb-c972dac6e0b2", :page 6, :position {:bounding {:x1 100.19791603088379, :y1 273.57293701171875, :x2 359.58335304260254, :y2 294.90625, :width 597.2518429782529, :height 837.1940656100257}, :rects ({:x1 100.19791603088379, :y1 273.57293701171875, :x2 359.58335304260254, :y2 294.90625, :width 597.2518429782529, :height 837.1940656100257}), :page 6}, :content {:text "其顶部的注释都会包含一个特殊标签u|NewFeature）n"}, :properties {:color "red"}} {:id #uuid "63e38ed3-b229-451f-a794-7c3048c1407c", :page 6, :position {:bounding {:x1 0, :y1 126, :x2 517.3855381011963, :y2 336.82293701171875, :width 597.2518429782529, :height 837.1940656100257}, :rects ({:x1 0, :y1 126, :x2 0, :y2 145.33334350585938, :width 597.2518429782529, :height 837.1940656100257} {:x1 360.28125953674316, :y1 295, :x2 517.3855381011963, :y2 315.66668701171875, :width 597.2518429782529, :height 837.1940656100257} {:x1 79.77083778381348, :y1 316.15625, :x2 206.39589881896973, :y2 336.82293701171875, :width 597.2518429782529, :height 837.1940656100257}), :page 6}, :content {:text "Gradle构建时会自动排除带有“{NewFeature]”标签的示例"}, :properties {:color "red"}} {:id #uuid "63e38ee5-0d8f-43ef-a9fa-4795e994f181", :page 6, :position {:bounding {:x1 0, :y1 206, :x2 517.9315586090088, :y2 455.09375, :width 597.2518429782529, :height 837.1940656100257}, :rects ({:x1 0, :y1 206, :x2 0, :y2 225.33334350585938, :width 597.2518429782529, :height 837.1940656100257} {:x1 101.85416603088379, :y1 413.66668701171875, :x2 517.9315586090088, :y2 434.3333740234375, :width 597.2518429782529, :height 837.1940656100257} {:x1 80.10416603088379, :y1 434.4271240234375, :x2 427.8019199371338, :y2 455.09375, :width 597.2518429782529, :height 837.1940656100257}), :page 6}, :content {:text "本书使用了自动化的构建过程，同样的自动化过程还有解压、编译以及测试所有示例代码。我使用Python 3编写了大fil的应用程序来处理所有的自动化过程。"}, :properties {:color "red"}} {:id #uuid "63e38f7b-fe63-4112-9535-0f62e007b4cd", :page 8, :position {:bounding {:x1 0, :y1 78, :x2 548.5729579925537, :y2 725.2604370117188, :width 597.1733333333334, :height 799.9466666666667}, :rects ({:x1 0, :y1 78, :x2 0, :y2 97.33332824707031, :width 597.1733333333334, :height 799.9466666666667} {:x1 0, :y1 94, :x2 0, :y2 113.33332824707031, :width 597.1733333333334, :height 799.9466666666667} {:x1 0, :y1 110, :x2 0, :y2 129.3333282470703, :width 597.1733333333334, :height 799.9466666666667} {:x1 0, :y1 126, :x2 0, :y2 145.33333206176758, :width 597.1733333333334, :height 799.9466666666667} {:x1 294.2916774749756, :y1 623.2083435058594, :x2 539.7626552581787, :y2 643.4895935058594, :width 597.1733333333334, :height 799.9466666666667} {:x1 220.8437557220459, :y1 643.875, :x2 539.8192348480225, :y2 664.0833435058594, :width 597.1733333333334, :height 799.9466666666667} {:x1 220.5833339691162, :y1 664.3958435058594, :x2 548.5729579925537, :y2 684.6770935058594, :width 597.1733333333334, :height 799.9466666666667} {:x1 220.5833339691162, :y1 684.7083435058594, :x2 539.9027919769287, :y2 705.0000305175781, :width 597.1733333333334, :height 799.9466666666667} {:x1 219.9375057220459, :y1 704.9479370117188, :x2 425.76125144958496, :y2 725.2604370117188, :width 597.1733333333334, :height 799.9466666666667}), :page 8}, :content {:text "我个人认为，把所有内容都封装为对象不仅是一种负担，而且还会将许多程序设计推向错误的方向。然而不可否认的是，在一些情况下对象依然十分有用。所以，将一切都封装为对象（尤其是深入到最底层的时候）是一种设计失误，但完全抛弃对象同样太过极端。"}, :properties {:color "red"}} {:id #uuid "63e38f8f-defa-4eb8-aa53-be559cab2b1a", :page 9, :position {:bounding {:x1 0, :y1 302, :x2 490.2907307893038, :y2 559.6563110351562, :width 564.3199999999999, :height 783.68}, :rects ({:x1 0, :y1 302, :x2 0, :y2 321.3333435058594, :width 564.3199999999999, :height 783.68} {:x1 131.78125508129597, :y1 520.5833740234375, :x2 490.2907307893038, :y2 541.2500610351562, :width 564.3199999999999, :height 783.68} {:x1 79.88541920483112, :y1 538.9896240234375, :x2 352.05336506664753, :y2 559.6563110351562, :width 564.3199999999999, :height 783.68}), :page 9}, :content {:text "我听说下一次革命将促生一个由足够多的人和连接组合而成的全球化的大脑。 Java会不会成为这种革命所需的工具之一呢？ 一切皆有可能。"}, :properties {:color "green"}} {:id #uuid "63e38fb2-f64c-4db3-b8b4-94b1d4a48e2e", :page 10, :position {:bounding {:x1 0, :y1 414, :x2 543.0417079925537, :y2 532.4791870117188, :width 583.6800000000001, :height 781.4933333333333}, :rects ({:x1 0, :y1 414, :x2 0, :y2 433.3333740234375, :width 583.6800000000001, :height 781.4933333333333} {:x1 0, :y1 430, :x2 0, :y2 449.3333740234375, :width 583.6800000000001, :height 781.4933333333333} {:x1 99.83333396911621, :y1 468.9583740234375, :x2 543.0417079925537, :y2 491.62506103515625, :width 583.6800000000001, :height 781.4933333333333} {:x1 207.6770839691162, :y1 472.32293701171875, :x2 543.0417079925537, :y2 489.40625, :width 583.6800000000001, :height 781.4933333333333} {:x1 73.4375057220459, :y1 494.1771240234375, :x2 287.54735374450684, :y2 510.1771240234375, :width 583.6800000000001, :height 781.4933333333333} {:x1 99.51041984558105, :y1 509.8125, :x2 442.66542625427246, :y2 532.4791870117188, :width 583.6800000000001, :height 781.4933333333333} {:x1 99.51041984558105, :y1 513.1458740234375, :x2 439.33925437927246, :y2 530.2396240234375, :width 583.6800000000001, :height 781.4933333333333}), :page 10}, :content {:text "诺贝尔经济学奖得主Joseph Stiglitz有一句生活哲言十分应景,也叫作“承诺升级理论”(The Theory of Escalating Commitment):持续犯借的代价由别人承担，而承认错误的代价由你自己来承担。"}, :properties {:color "yellow"}} {:id #uuid "63e38fdf-2ec1-4ad7-852b-d7d239bd0c30", :page 11, :position {:bounding {:x1 0, :y1 430.0000228881836, :x2 760.0223178863525, :y2 844.3750305175781, :width 878.9166666666666, :height 1225.4166666666665}, :rects ({:x1 0, :y1 430.0000228881836, :x2 0, :y2 449.33335876464844, :width 878.9166666666666, :height 1225.4166666666665} {:x1 577.9166660308838, :y1 779.1666870117188, :x2 760.0223178863525, :y2 813.8333740234375, :width 878.9166666666666, :height 1225.4166666666665} {:x1 635.0000400543213, :y1 783.2187805175781, :x2 760.0223178863525, :y2 809.8229370117188, :width 878.9166666666666, :height 1225.4166666666665} {:x1 116.16666603088379, :y1 809.7083740234375, :x2 244.1882724761963, :y2 844.3750305175781, :width 878.9166666666666, :height 1225.4166666666665} {:x1 116.16666603088379, :y1 814.3750305175781, :x2 244.1882724761963, :y2 841.0000305175781, :width 878.9166666666666, :height 1225.4166666666665}), :page 11}, :content {:text "Java-直严格遵守自己的向后兼容性承诺"}, :properties {:color "yellow"}} {:id #uuid "63e38fed-98c9-4060-8314-2fff1467226b", :page 12, :position {:bounding {:x1 0, :y1 222.00001525878906, :x2 824.653177857399, :y2 845.5833740234375, :width 918.25, :height 1225}, :rects ({:x1 0, :y1 222.00001525878906, :x2 0, :y2 241.33334350585938, :width 918.25, :height 1225} {:x1 175.66666662693024, :y1 783.1771240234375, :x2 824.653177857399, :y2 813.8438110351562, :width 918.25, :height 1225} {:x1 326.91666662693024, :y1 787.1979370117188, :x2 824.653177857399, :y2 810.5937805175781, :width 918.25, :height 1225} {:x1 113.75000250339508, :y1 814.9166870117188, :x2 818.949808716774, :y2 845.5833740234375, :width 918.25, :height 1225} {:x1 113.75000250339508, :y1 818.9166870117188, :x2 781.638285279274, :y2 842.3125305175781, :width 918.25, :height 1225}), :page 12}, :content {:text "区分清楚短期支持(Short-Term・Support, STS)版本和长期支持(Long-Term-Support, LTS)版本。Java8、11、17都是LTS版本，其他版本则是支持周期只有6个月的STS版本"}, :properties {:color "yellow"}} {:id #uuid "63e39002-15b5-4f6a-850c-65c213b623b7", :page 14, :position {:bounding {:x1 156.50001016259193, :y1 616.6041679382324, :x2 781.4527384340763, :y2 647.2708549499512, :width 919.1666666666666, :height 1231.1666666666667}, :rects ({:x1 156.50001016259193, :y1 616.6041679382324, :x2 781.4527384340763, :y2 647.2708549499512, :width 919.1666666666666, :height 1231.1666666666667} {:x1 234.25001016259193, :y1 620.6875419616699, :x2 781.4527384340763, :y2 644.0729179382324, :width 919.1666666666666, :height 1231.1666666666667}), :page 14}, :content {:text "归根结底，Java在桌面领域从未真正强大过，甚至从未触及设计师的雄心壮志"}, :properties {:color "yellow"}} {:id #uuid "63e39016-043d-4c9d-aa28-cc1bf5d09d8e", :page 14, :position {:bounding {:x1 277.00001016259193, :y1 853.3958740234375, :x2 676.1146036684513, :y2 884.0625305175781, :width 919.1666666666666, :height 1231.1666666666667}, :rects ({:x1 277.00001016259193, :y1 853.3958740234375, :x2 676.1146036684513, :y2 884.0625305175781, :width 919.1666666666666, :height 1231.1666666666667} {:x1 319.66666665673256, :y1 857.2708740234375, :x2 676.1146036684513, :y2 880.6875610351562, :width 919.1666666666666, :height 1231.1666666666667}), :page 14}, :content {:text "Java幵发工具集（Java Development Kit, JDK ）"}, :properties {:color "yellow"}} {:id #uuid "63e39346-9081-4b24-a36c-2b6f123cc6e5", :page 28, :position {:bounding {:x1 415.17327880859375, :y1 970.8646087646484, :x2 823.125, :y2 994.8646240234375, :width 920.1666666666666, :height 1234.083333333333}, :rects ({:x1 415.17327880859375, :y1 970.8646087646484, :x2 823.125, :y2 994.8646240234375, :width 920.1666666666666, :height 1234.083333333333} {:x1 527.5, :y1 974.1146087646484, :x2 816.8226928710938, :y2 992.5000305175781, :width 920.1666666666666, :height 1234.083333333333}), :page 28}, :content {:text "面向对象编程(Object-Oriented Programming, OOP)"}, :properties {:color "yellow"}} {:id #uuid "63e3938a-bc07-4752-ae4e-f4150a44c8ab", :page 30, :position {:bounding {:x1 284.66668701171875, :y1 201.2083511352539, :x2 822.42041015625, :y2 235.87500762939453, :width 933.0833333333333, :height 1246.0833333333333}, :rects ({:x1 284.66668701171875, :y1 201.2083511352539, :x2 822.42041015625, :y2 235.87500762939453, :width 933.0833333333333, :height 1246.0833333333333} {:x1 565, :y1 205.28125762939453, :x2 591.6146240234375, :y2 231.8958511352539, :width 933.0833333333333, :height 1246.0833333333333}), :page 30}, :content {:text "这一特点与现实中的事物极为相似，它们都具有各自的行为和特征"}, :properties {:color "green"}} {:id #uuid "63e393d7-7775-4c94-9b8f-04b0dad16b86", :page 30, :position {:bounding {:x1 153.08334350585938, :y1 840.5729370117188, :x2 380.2173767089844, :y2 875.2396240234375, :width 933.0833333333333, :height 1246.0833333333333}, :rects ({:x1 153.08334350585938, :y1 840.5729370117188, :x2 380.2173767089844, :y2 875.2396240234375, :width 933.0833333333333, :height 1246.0833333333333} {:x1 172.33334350585938, :y1 844.5312805175781, :x2 341.3157958984375, :y2 871.2500305175781, :width 933.0833333333333, :height 1246.0833333333333}), :page 30}, :content {:text "对象具有状态、行为及标识"}, :properties {:color "yellow"}} {:id #uuid "63e39419-ad74-4ef2-84ce-c3f254e543aa", :page 31, :position {:bounding {:x1 0, :y1 46, :x2 866.482421875, :y2 345.29168701171875, :width 931.1666666666666, :height 1282.583333333333}, :rects ({:x1 0, :y1 46, :x2 0, :y2 65.33332824707031, :width 931.1666666666666, :height 1282.583333333333} {:x1 351.3333435058594, :y1 278.9270935058594, :x2 866.482421875, :y2 313.5937805175781, :width 931.1666666666666, :height 1282.583333333333} {:x1 674.9166870117188, :y1 283.03125, :x2 866.482421875, :y2 309.7395935058594, :width 931.1666666666666, :height 1282.583333333333} {:x1 200.1666717529297, :y1 310.625, :x2 579.8436889648438, :y2 345.29168701171875, :width 931.1666666666666, :height 1282.583333333333} {:x1 200.1666717529297, :y1 314.625, :x2 579.8436889648438, :y2 341.3333435058594, :width 931.1666666666666, :height 1282.583333333333}), :page 31}, :content {:text "那些状态不同但结构相同的对象汇聚在一起，就变成了 “同一类对象” （classes of objects）,这就是关键字class的由来"}, :properties {:color "yellow"}} {:id #uuid "63e39443-e4e0-4d88-9ce4-1cb71ee9355e", :page 31, :position {:bounding {:x1 422.41668701171875, :y1 1153.5625305175781, :x2 832.7301025390625, :y2 1188.2292175292969, :width 931.1666666666666, :height 1282.583333333333}, :rects ({:x1 422.41668701171875, :y1 1153.5625305175781, :x2 832.7301025390625, :y2 1188.2292175292969, :width 931.1666666666666, :height 1282.583333333333} {:x1 467, :y1 1157.5729370117188, :x2 689.2597045898438, :y2 1184.3229370117188, :width 931.1666666666666, :height 1282.583333333333}), :page 31}, :content {:text "将类型（type）定义为接口，而类（class ）则是接口的具体实现"}, :properties {:color "yellow"}} {:id #uuid "63e39485-06b3-4130-9beb-525ad80a9eb1", :page 32, :position {:bounding {:x1 330.8924865722656, :y1 926.8646240234375, :x2 763.28125, :y2 950.8646240234375, :width 921.5833333333334, :height 1282.583333333333}, :rects ({:x1 330.8924865722656, :y1 926.8646240234375, :x2 763.28125, :y2 950.8646240234375, :width 921.5833333333334, :height 1282.583333333333} {:x1 450.25, :y1 930.1875305175781, :x2 745.3065795898438, :y2 948.5833740234375, :width 921.5833333333334, :height 1282.583333333333}), :page 32}, :content {:text "统一建模语言（Unified Modeling Language, UML）"}, :properties {:color "yellow"}} {:id #uuid "63e394cd-0999-4280-8d4d-a16414a980d3", :page 33, :position {:bounding {:x1 560.1666660308838, :y1 514.5521030426025, :x2 629.713357925415, :y2 536.5521030426025, :width 881.2499999999999, :height 1228.8333333333333}, :rects ({:x1 560.1666660308838, :y1 514.5521030426025, :x2 629.713357925415, :y2 536.5521030426025, :width 881.2499999999999, :height 1228.8333333333333} {:x1 577.2500400543213, :y1 517.2187900543213, :x2 593.9479160308838, :y2 533.9166660308838, :width 881.2499999999999, :height 1228.8333333333333}), :page 33}, :content {:text "高内聚性"}, :properties {:color "green"}} {:id #uuid "63e3959d-3184-4549-9a64-02c34874ffef", :page 34, :position {:bounding {:x1 261.0833435058594, :y1 878.8541870117188, :x2 354.1408386230469, :y2 906.8541870117188, :width 927.3333333333333, :height 1228.8333333333333}, :rects ({:x1 261.0833435058594, :y1 878.8541870117188, :x2 354.1408386230469, :y2 906.8541870117188, :width 927.3333333333333, :height 1228.8333333333333}), :page 34}, :content {:text "访问修饰符"}, :properties {:color "yellow"}} {:id #uuid "63e39903-caa1-4184-8264-9966a9793344", :page 42, :position {:bounding {:x1 435.3333535194397, :y1 957.28125, :x2 508.8021035194397, :y2 979.28125, :width 913.9166666666666, :height 1222.9999999999998}, :rects ({:x1 435.3333535194397, :y1 957.28125, :x2 508.8021035194397, :y2 979.28125, :width 913.9166666666666, :height 1222.9999999999998}), :page 42}, :content {:text "向上转型"}, :properties {:color "yellow"}} {:id #uuid "63e39979-ac4f-44e7-a382-36deaa9bfc8e", :page 41, :position {:bounding {:x1 0, :y1 78, :x2 780.5684604644775, :y2 934.4479370117188, :width 881.7499999999999, :height 1225.9166666666667}, :rects ({:x1 0, :y1 78, :x2 0, :y2 97.33331298828125, :width 881.7499999999999, :height 1225.9166666666667} {:x1 174.75000953674316, :y1 866.40625, :x2 780.5684604644775, :y2 901.0729370117188, :width 881.7499999999999, :height 1225.9166666666667} {:x1 305.25000953674316, :y1 871, :x2 780.5684604644775, :y2 897.65625, :width 881.7499999999999, :height 1225.9166666666667} {:x1 141.08333778381348, :y1 899.1145935058594, :x2 748.8196201324463, :y2 934.4479370117188, :width 881.7499999999999, :height 1225.9166666666667} {:x1 141.08333778381348, :y1 903.1145935058594, :x2 740.4530429840088, :y2 929.8645935058594, :width 881.7499999999999, :height 1225.9166666666667}), :page 41}, :content {:text "为了实现后期绑定，Java使用了一些极为特殊的代码以代替直接的函数调用，这段代码使用存储在对象中的信息来计算方法体的地址(第9章会详细地描述这个过程)"}, :properties {:color "red"}} {:id #uuid "63e399ec-9c0b-498d-907b-cef60ab819f4", :page 44, :position {:bounding {:x1 148.83333826065063, :y1 475.03125, :x2 629.2494912147522, :y2 508.3645935058594, :width 915.8333333333333, :height 1222.9999999999998}, :rects ({:x1 148.83333826065063, :y1 475.03125, :x2 629.2494912147522, :y2 508.3645935058594, :width 915.8333333333333, :height 1222.9999999999998} {:x1 466.0833535194397, :y1 479.6145935058594, :x2 629.2494912147522, :y2 504.6875, :width 915.8333333333333, :height 1222.9999999999998}), :page 44}, :content {:text "单根层次结构有利于实现垃圾收集器（garbage collector）"}, :properties {:color "yellow"}} {:id #uuid "63e39a4d-5adf-4538-955d-05d51b343925", :page 45, :position {:bounding {:x1 354.75000953674316, :y1 1042.5521240234375, :x2 420.18442726135254, :y2 1071.8854370117188, :width 887.9999999999999, :height 1230.2499999999998}, :rects ({:x1 354.75000953674316, :y1 1042.5521240234375, :x2 420.18442726135254, :y2 1071.8854370117188, :width 887.9999999999999, :height 1230.2499999999998}), :page 45}, :content {:text "向下转型"}, :properties {:color "yellow"}} {:id #uuid "63e39a6b-aa20-4b57-90b4-4d4d5f6f1271", :page 45, :position {:bounding {:x1 369.58335304260254, :y1 1098.28125, :x2 423.76844215393066, :y2 1126.28125, :width 887.9999999999999, :height 1230.2499999999998}, :rects ({:x1 369.58335304260254, :y1 1098.28125, :x2 423.76844215393066, :y2 1126.28125, :width 887.9999999999999, :height 1230.2499999999998} {:x1 382.83335304260254, :y1 1101.6145935058594, :x2 404.45835304260254, :y2 1123.2395935058594, :width 887.9999999999999, :height 1230.2499999999998}), :page 45}, :content {:text "自动装箱"}, :properties {:color "yellow"}} {:id #uuid "63e39a9d-45de-45d3-b764-83fac969199c", :page 46, :position {:bounding {:x1 343.16668701171875, :y1 472.22918701171875, :x2 436.01605224609375, :y2 502.8958435058594, :width 926.9166666666665, :height 1232.1666666666667}, :rects ({:x1 343.16668701171875, :y1 472.22918701171875, :x2 436.01605224609375, :y2 502.8958435058594, :width 926.9166666666665, :height 1232.1666666666667} {:x1 361.91668701171875, :y1 476.22918701171875, :x2 385.2708435058594, :y2 499.57293701171875, :width 926.9166666666665, :height 1232.1666666666667}), :page 46}, :content {:text "参数化类型"}, :properties {:color "yellow"}} {:id #uuid "63e39b4f-4e02-47d5-8b32-bdced2242063", :page 48, :position {:bounding {:x1 641.2071533203125, :y1 325.17708587646484, :x2 717.3873901367188, :y2 357.1770935058594, :width 931.1666666666666, :height 1259.5}, :rects ({:x1 641.2071533203125, :y1 325.17708587646484, :x2 717.3873901367188, :y2 357.1770935058594, :width 931.1666666666666, :height 1259.5}), :page 48}, :content {:text "内存泄漏"}, :properties {:color "yellow"}} {:id #uuid "63e39fed-33e8-40cc-b035-0517b4804311", :page 57, :position {:bounding {:x1 254.9166717529297, :y1 765.4270935058594, :x2 484.31170654296875, :y2 800.7604370117188, :width 922.5833333333331, :height 1267.1666666666667}, :rects ({:x1 254.9166717529297, :y1 765.4270935058594, :x2 484.31170654296875, :y2 800.7604370117188, :width 922.5833333333331, :height 1267.1666666666667}), :page 57}, :content {:text "始终在创建引用时就进行初始化"}, :properties {:color "yellow"}} {:id #uuid "63e3a036-36a7-46a3-90c1-a95cb0123e69", :page 58, :position {:bounding {:x1 280.8333435058594, :y1 667.59375, :x2 429.0216979980469, :y2 702.2604217529297, :width 933.0833333333333, :height 1259.5}, :rects ({:x1 280.8333435058594, :y1 667.59375, :x2 429.0216979980469, :y2 702.2604217529297, :width 933.0833333333333, :height 1259.5} {:x1 280.8333435058594, :y1 672.2604217529297, :x2 296.4583435058594, :y2 698.90625, :width 933.0833333333333, :height 1259.5}), :page 58}, :content {:text "5种数据存储方式"}, :properties {:color "yellow"}} {:id #uuid "63e3a03f-9eea-4bb0-bc47-301a23301d18", :page 58, :position {:bounding {:x1 168, :y1 722.90625, :x2 321.083251953125, :y2 745.5729217529297, :width 933.0833333333333, :height 1259.5}, :rects ({:x1 168, :y1 722.90625, :x2 321.083251953125, :y2 745.5729217529297, :width 933.0833333333333, :height 1259.5} {:x1 234.25, :y1 725.5729217529297, :x2 321.083251953125, :y2 742.28125, :width 933.0833333333333, :height 1259.5}), :page 58}, :content {:text "寄存器（register）"}, :properties {:color "yellow"}} {:id #uuid "63e3a046-2608-4468-8199-6e093873a393", :page 58, :position {:bounding {:x1 169.9166717529297, :y1 884.0208435058594, :x2 265.9181823730469, :y2 906.0208435058594, :width 933.0833333333333, :height 1259.5}, :rects ({:x1 169.9166717529297, :y1 884.0208435058594, :x2 265.9181823730469, :y2 906.0208435058594, :width 933.0833333333333, :height 1259.5} {:x1 197.75, :y1 887.3333435058594, :x2 265.9181823730469, :y2 904.0104064941406, :width 933.0833333333333, :height 1259.5}), :page 58}, :content {:text "栈（stack）"}, :properties {:color "yellow"}} {:id #uuid "63e3a063-6b19-46ec-9906-ead4e4726282", :page 59, :position {:bounding {:x1 208.33334350585938, :y1 131.36459350585938, :x2 287.0684509277344, :y2 164.69793701171875, :width 934.0833333333334, :height 1272.5}, :rects ({:x1 208.33334350585938, :y1 131.36459350585938, :x2 287.0684509277344, :y2 164.69793701171875, :width 934.0833333333334, :height 1272.5} {:x1 231.64584350585938, :y1 136.03125, :x2 287.0684509277344, :y2 160.98959350585938, :width 934.0833333333334, :height 1272.5}), :page 59}, :content {:text "堆(heap )"}, :properties {:color "yellow"}} {:id #uuid "63e3a074-50ef-47d4-8032-7cf8e3f7bbc3", :page 59, :position {:bounding {:x1 206.9166717529297, :y1 357.35418701171875, :x2 414.82177734375, :y2 390.6875, :width 934.0833333333334, :height 1272.5}, :rects ({:x1 206.9166717529297, :y1 357.35418701171875, :x2 414.82177734375, :y2 390.6875, :width 934.0833333333334, :height 1272.5} {:x1 222.25, :y1 362.125, :x2 414.82177734375, :y2 387.0625, :width 934.0833333333334, :height 1272.5}), :page 59}, :content {:text "常量存储(constant storage)"}, :properties {:color "yellow"}} {:id #uuid "63e3a091-cc22-4d99-a43f-d55120030723", :page 59, :position {:bounding {:x1 205.9166717529297, :y1 453.35418701171875, :x2 457.1770935058594, :y2 486.68756103515625, :width 934.0833333333334, :height 1272.5}, :rects ({:x1 205.9166717529297, :y1 453.35418701171875, :x2 457.1770935058594, :y2 486.68756103515625, :width 934.0833333333334, :height 1272.5} {:x1 226.08334350585938, :y1 458.04168701171875, :x2 457.1770935058594, :y2 483.10418701171875, :width 934.0833333333334, :height 1272.5}), :page 59}, :content {:text "非RAM存储(non-RAM storage )"}, :properties {:color "yellow"}} {:id #uuid "63e3a0e9-56ec-4aa6-a954-e0633d9e1366", :page 59, :position {:bounding {:x1 534.25, :y1 549.8645935058594, :x2 628.3742065429688, :y2 583.1979370117188, :width 934.0833333333334, :height 1272.5}, :rects ({:x1 534.25, :y1 549.8645935058594, :x2 628.3742065429688, :y2 583.1979370117188, :width 934.0833333333334, :height 1272.5}), :page 59}, :content {:text "持久化对象"}, :properties {:color "yellow"}} {:id #uuid "63e3a140-2c66-4f87-8a76-541a76b1d61c", :page 60, :position {:bounding {:x1 0, :y1 222, :x2 811.258544921875, :y2 600.6146240234375, :width 937.4166666666666, :height 1272.5}, :rects ({:x1 0, :y1 222, :x2 0, :y2 241.33334350585938, :width 937.4166666666666, :height 1272.5} {:x1 743.354248046875, :y1 544.6354370117188, :x2 811.258544921875, :y2 568.6354370117188, :width 937.4166666666666, :height 1272.5} {:x1 96.5, :y1 567.28125, :x2 461.945556640625, :y2 600.6146240234375, :width 937.4166666666666, :height 1272.5}), :page 60}, :content {:text "包装类可以将基本类型呈现为位于堆上的非原始对象"}, :properties {:color "yellow"}} {:id #uuid "63e3a14d-cbca-4e4d-9a7e-7509d3524531", :page 59, :position {:bounding {:x1 315.3333435058594, :y1 756.3854370117188, :x2 394.63037109375, :y2 796.3854370117188, :width 934.0833333333334, :height 1272.5}, :rects ({:x1 315.3333435058594, :y1 756.3854370117188, :x2 394.63037109375, :y2 796.3854370117188, :width 934.0833333333334, :height 1272.5}), :page 59}, :content {:text "基本类型"}, :properties {:color "yellow"}} {:id #uuid "63e3a196-4d8b-4a3f-8ee5-2af97100d908", :page 60, :position {:bounding {:x1 137.25, :y1 1018.9375, :x2 234.0599822998047, :y2 1056.9375, :width 937.4166666666666, :height 1272.5}, :rects ({:x1 137.25, :y1 1018.9375, :x2 234.0599822998047, :y2 1056.9375, :width 937.4166666666666, :height 1272.5}), :page 60}, :content {:text "高精度数字"}, :properties {:color "yellow"}} {:id #uuid "63e3a1b0-be17-4003-8711-23943d793c37", :page 60, :position {:bounding {:x1 540.5, :y1 1076.9375, :x2 725.2814331054688, :y2 1100.9375, :width 937.4166666666666, :height 1272.5}, :rects ({:x1 540.5, :y1 1076.9375, :x2 725.2814331054688, :y2 1100.9375, :width 937.4166666666666, :height 1272.5} {:x1 625.9166870117188, :y1 1080.28125, :x2 647.9323120117188, :y2 1098.5625, :width 937.4166666666666, :height 1272.5}), :page 60}, :content {:text "Biginteger和BigDecima"}, :properties {:color "yellow"}} {:id #uuid "63e3a201-d5ce-406c-979e-53ad3f165619", :page 62, :position {:bounding {:x1 385.4009704589844, :y1 762.0104217529297, :x2 525.6666870117188, :y2 786.0104217529297, :width 927.3333333333333, :height 1238.4166666666665}, :rects ({:x1 385.4009704589844, :y1 762.0104217529297, :x2 525.6666870117188, :y2 786.0104217529297, :width 927.3333333333333, :height 1238.4166666666665} {:x1 444, :y1 765.3229217529297, :x2 507.4355163574219, :y2 783.6666717529297, :width 927.3333333333333, :height 1238.4166666666665}), :page 62}, :content {:text "作用域（scope ）"}, :properties {:color "yellow"}} {:id #uuid "63e3c200-f649-49e6-8164-a1c9a24ba2af", :page 66, :position {:bounding {:x1 0, :y1 190, :x2 828.5388588905334, :y2 499.2083740234375, :width 915.8333333333333, :height 1215.3333333333333}, :rects ({:x1 0, :y1 190, :x2 0, :y2 209.33334350585938, :width 915.8333333333333, :height 1215.3333333333333} {:x1 551.5000405311584, :y1 435.60418701171875, :x2 828.5388588905334, :y2 468.9375, :width 915.8333333333333, :height 1215.3333333333333} {:x1 108.50000238418579, :y1 465.875, :x2 570.4141640663147, :y2 499.2083740234375, :width 915.8333333333333, :height 1215.3333333333333} {:x1 108.50000238418579, :y1 470.54168701171875, :x2 570.4141640663147, :y2 495.57293701171875, :width 915.8333333333333, :height 1215.3333333333333}), :page 66}, :content {:text "方法名和参数列表共同构成了方法的“签名”(signature ),方法签名即该方法的唯一标识符"}, :properties {:color "yellow"}} {:id #uuid "63e3c253-33c9-430c-9b05-1bccfbcc7691", :page 67, :position {:bounding {:x1 246.75001001358032, :y1 1101.8333435058594, :x2 548.9737343788147, :y2 1128.5000305175781, :width 909.5833333333333, :height 1220.6666666666665}, :rects ({:x1 246.75001001358032, :y1 1101.8333435058594, :x2 548.9737343788147, :y2 1128.5000305175781, :width 909.5833333333333, :height 1220.6666666666665}), :page 67}, :content {:text "一股情况下，传递对象实际上就是传递对象的引用"}, :properties {:color "red"}} {:id #uuid "63e3c2c5-06f5-42b4-93b0-be34a9d7e8e2", :page 68, :position {:bounding {:x1 0, :y1 286, :x2 824.7391152381897, :y2 941.9479370117188, :width 912, :height 1215.3333333333333}, :rects ({:x1 0, :y1 286, :x2 0, :y2 305.33331298828125, :width 912, :height 1215.3333333333333} {:x1 144.00001001358032, :y1 875.4270935058594, :x2 824.7391152381897, :y2 910.0937805175781, :width 912, :height 1215.3333333333333} {:x1 242.91666650772095, :y1 880.0104370117188, :x2 824.7391152381897, :y2 906.75, :width 912, :height 1215.3333333333333} {:x1 104.66666650772095, :y1 907.28125, :x2 206.17708826065063, :y2 941.9479370117188, :width 912, :height 1215.3333333333333} {:x1 104.66666650772095, :y1 911.28125, :x2 179.62002038955688, :y2 937.9895935058594, :width 912, :height 1215.3333333333333}), :page 68}, :content {:text "使用反转的URL来定义命名空间是一种 全新的尝试，而在此之前没有其他语言使用过此方案。"}, :properties {:color "red"}} {:id #uuid "63e3c312-d1c0-4ead-b731-0ffbc9e2dd74", :page 70, :position {:bounding {:x1 217.91666662693024, :y1 282.09375, :x2 752.7054849863052, :y2 315.4270935058594, :width 917.7499999999999, :height 1219.1666666666665}, :rects ({:x1 217.91666662693024, :y1 282.09375, :x2 752.7054849863052, :y2 315.4270935058594, :width 917.7499999999999, :height 1219.1666666666665} {:x1 458.91666662693024, :y1 286.7083435058594, :x2 483.958353638649, :y2 311.75, :width 917.7499999999999, :height 1219.1666666666665}), :page 70}, :content {:text "许多编程风格指南会明确指出，每一个用到的类都应该被单独导入"}, :properties {:color "yellow"}} {:id #uuid "63e3c377-4b88-49b6-98cf-10946fd8a35e", :page 71, :position {:bounding {:x1 0, :y1 110, :x2 795.3430576324463, :y2 939.5833435058594, :width 890.9166666666665, :height 1209.5833333333333}, :rects ({:x1 0, :y1 110, :x2 0, :y2 129.33331298828125, :width 890.9166666666665, :height 1209.5833333333333} {:x1 689.7500400543213, :y1 884.4166870117188, :x2 795.3430576324463, :y2 908.4166870117188, :width 890.9166666666665, :height 1209.5833333333333} {:x1 742.0833530426025, :y1 887.7395935058594, :x2 795.3430576324463, :y2 906.0729370117188, :width 890.9166666666665, :height 1209.5833333333333} {:x1 148.83333778381348, :y1 915.5833435058594, :x2 515.2624912261963, :y2 939.5833435058594, :width 890.9166666666665, :height 1209.5833333333333} {:x1 148.83333778381348, :y1 918.9166870117188, :x2 515.2624912261963, :y2 937.25, :width 890.9166666666665, :height 1209.5833333333333}), :page 71}, :content {:text "static字段是基于类创建的，非static字段则是基于对象创建的"}, :properties {:color "yellow"}} {:id #uuid "63e3c3bb-1dc1-447a-8a61-2c0e72f2a0d9", :page 72, :position {:bounding {:x1 297.9813332557678, :y1 742.8333435058594, :x2 662.1321206092834, :y2 766.8333435058594, :width 913.9166666666666, :height 1209.5833333333333}, :rects ({:x1 297.9813332557678, :y1 742.8333435058594, :x2 662.1321206092834, :y2 766.8333435058594, :width 913.9166666666666, :height 1209.5833333333333} {:x1 354.7500100135803, :y1 746.15625, :x2 585.2363686561584, :y2 764.5625, :width 913.9166666666666, :height 1209.5833333333333}), :page 72}, :content {:text "所有的Java代码文件都默认导入了 java.lan"}, :properties {:color "yellow"}} {:id #uuid "63e3c3e9-8723-4b6b-8f79-ff033b2b3224", :page 73, :position {:bounding {:x1 0, :y1 94, :x2 796.7836093902588, :y2 434.9375, :width 892.8333333333334, :height 1213.4166666666665}, :rects ({:x1 0, :y1 94, :x2 0, :y2 113.33334350585938, :width 892.8333333333334, :height 1213.4166666666665} {:x1 295.1666660308838, :y1 369.6458435058594, :x2 796.7836093902588, :y2 404.3125, :width 892.8333333333334, :height 1213.4166666666665} {:x1 577.9166660308838, :y1 373.7395935058594, :x2 796.7836093902588, :y2 400.32293701171875, :width 892.8333333333334, :height 1213.4166666666665} {:x1 154.58333778381348, :y1 400.2708435058594, :x2 228.49976539611816, :y2 434.9375, :width 892.8333333333334, :height 1213.4166666666665} {:x1 154.58333778381348, :y1 404.9375, :x2 228.49976539611816, :y2 431.57293701171875, :width 892.8333333333334, :height 1213.4166666666665}), :page 73}, :content {:text "文件中必须存在一个与该文件同名的类（如果你没有这么做，则编译器会报错）"}, :properties {:color "yellow"}} {:id #uuid "63e3c414-76da-47ea-be48-e2b55799c907", :page 73, :position {:bounding {:x1 0, :y1 350, :x2 799.3658237457275, :y2 908.28125, :width 892.8333333333334, :height 1213.4166666666665}, :rects ({:x1 0, :y1 350, :x2 0, :y2 369.3333282470703, :width 892.8333333333334, :height 1213.4166666666665} {:x1 653.2500400543213, :y1 850.90625, :x2 799.3658237457275, :y2 870.90625, :width 892.8333333333334, :height 1213.4166666666665} {:x1 153.08333778381348, :y1 873.6145935058594, :x2 366.06235694885254, :y2 908.28125, :width 892.8333333333334, :height 1213.4166666666665}), :page 73}, :content {:text "Java的重要资产之一就是内容极为丰富的标准库"}, :properties {:color "yellow"}} {:id #uuid "63e3c52a-cf2f-4b46-b01f-3b7722ca6c51", :page 75, :position {:bounding {:x1 297.58335304260254, :y1 803.96875, :x2 397.3016757965088, :y2 827.96875, :width 894.75, :height 1213.4166666666665}, :rects ({:x1 297.58335304260254, :y1 803.96875, :x2 397.3016757965088, :y2 827.96875, :width 894.75, :height 1213.4166666666665}), :page 75}, :content {:text "驼峰式命名法"}, :properties {:color "yellow"}}], :extra {:page 77}}